[{"content":"🍃 Self-Learning Notes\nToday was another productive day! I finally figured out how to use a Hugo theme to successfully deploy my blog on GitHub Pages. Here’s a quick guide to help anyone who’s on a similar journey.\n🎯 Preparation\nBefore you start, you’ll need the following tools:\nHugo: A static site generator to create your blog. Hugo Theme: A stylish theme to make your blog look amazing. GitHub: For hosting your code and blog content. GitHub Desktop: A user-friendly Git client to sync your files with ease. 💡 Pro Tip\nInstalling these tools is straightforward—just follow the instructions on their official websites.\n🛠️ Configuration Process\nSetting up everything might feel a bit tricky at first. But don’t worry, here’s a super detailed tutorial to guide you through every step:\n👉 Generate static pages with Hugo and host them for free on GitHub Pages\nThis tutorial covers everything from the basics to deploying your blog seamlessly.\n💡 Useful Tips\nOnce everything is set up, you can add your local repository to GitHub Desktop. It automatically detects the name of your repository, making it super convenient to sync your changes. No more manual uploading—just a few clicks and you\u0026rsquo;re done!\n✨ Conclusion\nCreating a blog with Hugo and GitHub Pages is not only cost-effective but also a fantastic way to showcase your learning journey and projects. Learning to code is so much fun—every completed project feels like a small victory!\nIf you’re interested in this kind of content, feel free to check back on my blog. I’ll be sharing more about my learning experiences and growth journey! 💻🌟 🎉 Credits\n","date":"2024-11-15T00:00:00Z","permalink":"https://lumimimi.github.io/lumiblog/p/test-chinese/","title":"GitHub Pages + Hugo Blog"},{"content":" If expression evaluates to true, PHP will execute statement, and if it evaluates to false- it\u0026rsquo;ll ignore it.\nCheck both the type and value of DATE1 in your PHP code, you can use the var_dump() function.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;?php // Execute the query and get the result set $sql = \u0026#34;SELECT DATE1 FROM Table1\u0026#34;; $stmt = $conn-\u0026gt;query($sql); // Fetch one row of data $row = $stmt-\u0026gt;fetch(PDO::FETCH_ASSOC); // Method 1: Using echo to output the value echo $row[\u0026#39;DATE1\u0026#39;]; // Method 2: Using var_dump to display the type and value // var_dump will show both the type and the value of the variable, which is useful for debugging var_dump($row[\u0026#39;DATE1\u0026#39;]); ?\u0026gt; Execute the query:\nUse $conn-\u0026gt;query($sql) to execute the query and get the result set. Then, $stmt-\u0026gt;fetch(PDO::FETCH_ASSOC) is used to fetch one row of data from the result and store it in the $row variable.\nOutput the data:\necho is used to output the value of the DATE1 field. var_dump is used to show both the type and value of DATE1, which is useful for debugging. ","date":"2024-11-15T00:00:00Z","permalink":"https://lumimimi.github.io/lumiblog/p/if-conditional/","title":"if conditional"}]